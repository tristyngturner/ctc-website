{"version":3,"sources":["images/ctc.png","components/Home.js","components/About.js","components/Services.js","components/Quote.js","images/ctc-only.png","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","id","src","largeLogo","alt","Component","About","Services","Quote","props","_handleChange","event","setState","target","name","value","_handleChangeArray","currentArray","state","typeOfCabling","push","_handleSubmit","alert","zipCode","cableDrops","dateCompleted","typeOfNetworking","typeOfProperty","multiFloor","_hideAlert","document","getElementById","style","backgroundColor","Math","floor","random","toString","prevProps","prevState","snapshot","console","log","setTimeout","this","for","type","onChange","onClick","Header","_handleBurger","burger","navbar","classList","toggle","role","href","smallLogo","Footer","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a09e2803.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ctc.0fcc9676.png\";","import React, { Component } from 'react';\nimport largeLogo from '../images/ctc.png'\n\n\nclass Home extends Component {\n    render () {\n        return (\n            <div>\n            <div className=\"container is-centered pt-6 pr-3 pb-3 pl-3 mt-6\" id=\"home\">\n                <h1 className=\"is-size-2 has-text-weight-bold has-text-centered\">Welcome to CTC Cabling. </h1>\n                <img src={largeLogo} alt=\"\"></img>\n                \n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n// import largeLogo from '../images/ctc.png'\n\nclass About extends Component {\n    render () {\n        return (\n            <div className=\"hero is-full-height-with-navbar pt-6 pr-3 pb-3 pl-3 mt-6\">\n                <div className=\"hero-header\">\n                    <h1 className=\"is-size-2 has-text-weight-bold has-text-dark\">About Us</h1>\n                </div>\n                <div className=\"hero-body\">\n                        \n                        <p className=\"is-size-5\">Our founder, Garrett Taylor, has always had a passion for tech and all that it entails. \n                        He has worked his way up in his field to become much more than a cable engineer. \n                        When working to build his first custom home, he learned the importance of properly laying out the cabling in your home to suit your the needs of your family.\n                        Whether that's for work, gaming, internet, or just general all-encompassing cabling; he can make what you want work in your home.\n                        CTC Cabling was built from passion, and we truly enjoy what we do and vow will make your home function to the best of it's ability.</p>\n                        {/* <img className=\"container\" src={largeLogo} alt=\"\"></img> */}\n                        <hr className=\"orange\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\n\nclass Services extends Component {\n    render () {\n        return (\n            <div>\n                <div className=\"hero is-full-height pt-6 pr-3 pb-3 pl-3 mt-6\">\n                    <div className=\"hero-header\">\n                        <h1 className=\"is-size-2 has-text-weight-bold has-text-dark\">What We Offer</h1>\n                        \n                    </div>\n                    \n                    <div className=\"hero-body\">\n                        <h1 className=\"is-size-4 has-text-weight-bold\">Network Data, Structured Cable and Fiber Cable Installation In Fort Worth and Surrounding Areas.</h1>\n                        <h1 className=\"is-size-5 is-centered\">Our Core Services</h1>\n                        <p className=\"py-5 pt-3 pb-3 pr-3 pl-3 has-text-center\">Network Cabling</p>\n                        <p className=\"py-5 px-3 has-text-center\">Fiber Optice Cabling</p>\n                        <p className=\"py-5 px-3 has-text-center\">Video Surveillance Solutions</p>\n                        <p className=\"py-5 px-3 has-text-center\">Wireless Network Installation</p>\n                        <p className=\"py-5 pt-3 pb-3 pr-3 pl-3 has-text-center\">Residential Services</p>\n                        <hr className=\"orange\"/>\n                    </div>\n                    \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Services;\n\n\n","import React, { Component } from 'react';\n// import Alert from './Alert';\n\n\n\nclass Quote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zipCode: \"\",\n            typeOfCabling: [],\n            cableDrops: \"\",\n            dateCompleted: \"\",\n            typeOfNetworking: \"\",\n            typeOfProperty: \"\",\n            multiFloor: \"\",\n        };\n    }\n\n    _handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    _handleChangeArray = (event) => {\n\n        const currentArray = this.state.typeOfCabling\n\n        currentArray.push(event.target.value)\n\n        this.setState({\n            [event.target.name]: currentArray\n        })\n        \n    }\n\n    _handleSubmit = () => {\n    alert(`Your quote has been submitted! \\n \n            Zip Code: ${this.state.zipCode} \\n \n            Type of cabling: ${this.state.typeOfCabling} \\n \n            No. of cable drops: ${this.state.cableDrops} \\n \n            Work to be completed by: ${this.state.dateCompleted} \\n\n            Type of networking needed: ${this.state.typeOfNetworking} \\n\n            Type of property: ${this.state.typeOfProperty} \\n\n            No. of floors: ${this.state.multiFloor}`)\n    }\n\n    _hideAlert = () => {\n\n        document.getElementById('quoteForm').style.backgroundColor = '#' + Math.floor(Math.random()*16777215).toString(16);\n    }\n\n    componentDidUpdate (prevProps, prevState, snapshot) {\n        console.log(\"component did mount\")\n                setTimeout(this._hideAlert(), 3000);\n    }\n    \n    render () {\n        return (\n\n            <div className=\"hero is-full-height form pt-6 pr-3 pb-3 pl-3 mt-6\" id=\"quoteForm\">\n            <div className=\"hero-head\">\n                <h1 className=\"is-size-2 has-text-weight-bold has-text-dark\">Get a Quote</h1>\n            </div>\n           <div className=\"hero-body\">\n            <form>\n                <div className =\"zipCode\">\n                    <label for=\"zipCode\">1. Zip Code where work needs to be performed:</label><br/>\n                    <br/>\n                    <input type=\"text\" id=\"zipCode\" name=\"zipCode\" onChange={this._handleChange}></input>\n                    <br/>\n                </div>\n\n                <div className=\"typeOfCabling\">\n                    <p>2. What type of cabling do you need?</p>\n                    <input type=\"checkbox\" id=\"CAT5\" name=\"typeOfCabling\" value=\"CAT5\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling0\">CAT5 / CAT5E</label><br/>\n                    <input type=\"checkbox\" id=\"CAT6\" name=\"typeOfCabling\" value=\"CAT6\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling1\">CAT6</label><br/>\n                    <input type=\"checkbox\" id=\"fiberOptic\" value=\"Fiber_Optic\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling2\">Fiber Optic</label><br/>\n                    <input type=\"checkbox\" id=\"voice\" value=\"Voice\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling3\">Voice/Telephone</label><br/>\n                    <input type=\"checkbox\" id=\"corpWireless\" value=\"Commercial_Wireless\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling4\">Commercial Wireless</label><br/>\n                    <input type=\"checkbox\" id=\"security\" value=\"Security\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling5\">Security/Surveillance</label><br/>\n                    <input type=\"checkbox\" id=\"notSure\" value=\"Not_sure\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling5\">Not Sure</label><br/>\n                    <input type=\"checkbox\" id=\"other\" value=\"Other\" name=\"typeOfCabling\" onChange={this._handleChangeArray}></input>\n                    <label for=\"typeOfCabling6\">Other</label><br/>\n                    {/* <input type=\"text\" id=\"otherText\"></input> */}\n                </div>\n\n                    <br/>\n\n                <div className =\"cableDrops\">\n                    <label for=\"cableDrops\">3. Total # of cable drops (including data and voice cabling):</label><br/>\n                    <br/>\n                    <input type=\"text\" id=\"cableDrops\" name=\"cableDrops\" onChange={this._handleChange}></input>\n                </div>\n\n                    <br/>\n\n                <div className =\"dateCompleted\">\n                    <label for=\"dateCompleted\">4. When does work need to be complted? (Can give date or number of months):</label><br/>\n                    <br/>\n                    <input type=\"text\" id=\"dateCompleted\" name=\"dateCompleted\" onChange={this._handleChange}></input>\n                </div>\n\n                    <br/>\n\n                <div>\n                    <p>5. Type of network connection(s) needed:</p>\n                    <input type=\"radio\" id=\"dataPhone\" name=\"typeOfNetworking\" value=\"dataPhone\" onChange={this._handleChange}></input>\n                    <label for=\"dataPhone\">Both Data and Phone</label><br/>\n                    <input type=\"radio\" id=\"data\" name=\"typeOfNetworking\" value=\"data\" onChange={this._handleChange}></input>\n                    <label for=\"data\">Data Only</label><br/>\n                    <input type=\"radio\" id=\"phone\" name=\"typeOfNetworking\" value=\"phone\" onChange={this._handleChange}></input>\n                    <label for=\"phone\">Phone Only</label><br/>\n                    <input type=\"radio\" id=\"unknown\" name=\"typeOfNetworking\" value=\"unknown\" onChange={this._handleChange}></input>\n                    <label for=\"unknown\">Not Sure</label>\n                </div>\n                \n                    <br/>\n\n                <div>\n                <p>6. Type of construction where work is needed:</p>\n                    <input type=\"radio\" id=\"office\" name=\"typeOfProperty\" value=\"office\" onChange={this._handleChange}></input>\n                    <label for=\"office\">Commercial Office Space</label><br/>\n                    <input type=\"radio\" id=\"warehouse\" name=\"typeOfProperty\" value=\"warehouse\" onChange={this._handleChange}></input>\n                    <label for=\"warehouse\">Warehouse</label><br/>\n                    <input type=\"radio\" id=\"newConstruction\" name=\"typeOfProperty\" value=\"newConstruction\" onChange={this._handleChange}></input>\n                    <label for=\"newConstruction\">New Construction or Multi-Dwelling</label><br/>\n                    <input type=\"radio\" id=\"outside\" name=\"typeOfProperty\" value=\"outside\" onChange={this._handleChange}></input>\n                    <label for=\"outside\">Outside (moble office/trailers, external cabling, etc.</label>\n                </div>\n\n                        <br/>\n                \n                <div>\n                <p>7. Will mulitple floors within office(s) need to be cabled?</p>\n                    <input type=\"radio\" id=\"oneFloor\" name=\"multiFloor\" value=\"oneFloor\" onChange={this._handleChange}></input>\n                    <label for=\"oneFloor\">No - Only one floor needs to be cabled</label><br/>\n                    <input type=\"radio\" id=\"multipleFloors\" name=\"multiFloor\" value=\"multipleFloors\" onChange={this._handleChange}></input>\n                    <label for=\"multipleFloors\">Yes - multiple floors will need to be connected</label><br/>\n                </div>\n\n                        <br/>\n\n                <div>\n                    <button onClick={this._handleSubmit}>Submit</button>\n                    \n                    \n                    \n                </div>\n                \n            </form>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Quote;\n\n\n// {/* {\n//                         this.state.showAlert ? */}\n//                         <Alert showAlert={this.state.showAlert} zipCode={this.state.zipCode} onHide={this._hideAlert}/>\n//                     {/* } */}","export default __webpack_public_path__ + \"static/media/ctc-only.662806b8.png\";","import React, { Component } from 'react';\nimport smallLogo from '../images/ctc-only.png'\n\n\nclass Header extends Component {\n\n    _handleBurger = (event) => {\n        const burger = document.getElementById('burger');\n        const navbar = document.getElementById('nav-links');\n\n        burger.classList.toggle('is-active');\n        \n        navbar.classList.toggle('is-active')\n        \n    }\n\n    render () {\n        return (\n        <div>\n\n            <nav className=\"navbar is-fixed-top black\" role=\"navigation\">\n                <div className=\"navbar-brand\">\n                    <a className=\"navbar-item\" href=\"#home\">\n                        <img src={smallLogo} alt=\"\"></img>\n                    </a>\n                    <a className=\"navbar-item has-text-light\" href=\"#home\">\n                        {/*make this the return home link*/}\n                        Chisholm Trail Cabling\n                    </a>\n                    <div className=\"navbar-burger\" id=\"burger\" onClick={this._handleBurger}>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n                <div className=\"navbar-menu black\" id=\"nav-links\">\n                    <div className=\"navbar-end\">\n                                <a className=\"navbar-item has-text-light\" href=\"#about\">\n                                    About Us\n                                </a>\n\n                                <a className=\"navbar-item has-text-light\" href=\"#services\">\n                                    What We Offer\n                                </a>\n\n                                <a className=\"navbar-item has-text-light\" href=\"#quote\">\n                                    Get A Quote\n                                </a>\n                    </div>\n                </div>\n            </nav>\n\n\n\n\n\n\n\n            \n        </div>\n        )\n    }\n}\n\nexport default Header;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\n\n\nclass Footer extends Component {\n    render () {\n        return (\n            <div className=\"container is-centered p-3 black\">\n                <h1 className=\"is-size-4 has-text-weight-bold is-centered has-text-light\">Contact Us</h1>\n                <p className=\"is-size-6 has-text-light\">Phone: (555) 555-5555</p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css'\nimport Home from './components/Home'\nimport About from './components/About';\nimport Services from './components/Services';\nimport Quote from './components/Quote';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/services\">\n            <Services />\n          </Route>\n          <Route path=\"/quote\">\n            <Quote />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n\n\n      <div>\n        <Home />\n      </div>\n      <div>\n        <Header />\n      </div>\n      <div id=\"about\">\n        <About />\n      </div>\n      <div id=\"services\">\n        <Services />\n      </div>\n      <div id=\"quote\">\n        <Quote />\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}